//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.11.23 at 01:41:44 AM CET 
//

package de.minecrawler.IR1.data;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java
 * element interface generated in the de.minecrawler.IR1.data package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the
 * Java representation for XML content. The Java representation of XML content
 * can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory
 * methods for each of these are provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _D_QNAME = new QName("", "D");
    private final static QName _ORGS_QNAME = new QName("", "ORGS");
    private final static QName _TOPICS_QNAME = new QName("", "TOPICS");
    private final static QName _COMPANIES_QNAME = new QName("", "COMPANIES");
    private final static QName _MKNOTE_QNAME = new QName("", "MKNOTE");
    private final static QName _UNKNOWN_QNAME = new QName("", "UNKNOWN");
    private final static QName _PLACES_QNAME = new QName("", "PLACES");
    private final static QName _DATE_QNAME = new QName("", "DATE");
    private final static QName _PEOPLE_QNAME = new QName("", "PEOPLE");
    private final static QName _EXCHANGES_QNAME = new QName("", "EXCHANGES");
    private final static QName _TEXTAUTHOR_QNAME = new QName("", "AUTHOR");
    private final static QName _TEXTBODY_QNAME = new QName("", "BODY");
    private final static QName _TEXTDATELINE_QNAME = new QName("", "DATELINE");
    private final static QName _TEXTTITLE_QNAME = new QName("", "TITLE");

    /**
     * Create a new ObjectFactory that can be used to create new instances of
     * schema derived classes for package: de.minecrawler.IR1.data
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link XMLDocumentList }
     * 
     */
    public XMLDocumentList createLEWIS() {
        return new XMLDocumentList();
    }

    /**
     * Create an instance of {@link XMLDocument }
     * 
     */
    public XMLDocument createREUTERS() {
        return new XMLDocument();
    }

    /**
     * Create an instance of {@link XMLText }
     * 
     */
    public XMLText createTEXT() {
        return new XMLText();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "D")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createD(String value) {
        return new JAXBElement<String>(_D_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ORGS")
    public JAXBElement<String> createORGS(String value) {
        return new JAXBElement<String>(_ORGS_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TOPICS")
    public JAXBElement<String> createTOPICS(String value) {
        return new JAXBElement<String>(_TOPICS_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "COMPANIES")
    public JAXBElement<String> createCOMPANIES(String value) {
        return new JAXBElement<String>(_COMPANIES_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MKNOTE")
    public JAXBElement<String> createMKNOTE(String value) {
        return new JAXBElement<String>(_MKNOTE_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "UNKNOWN")
    public JAXBElement<String> createUNKNOWN(String value) {
        return new JAXBElement<String>(_UNKNOWN_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PLACES")
    public JAXBElement<String> createPLACES(String value) {
        return new JAXBElement<String>(_PLACES_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "DATE")
    public JAXBElement<String> createDATE(String value) {
        return new JAXBElement<String>(_DATE_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PEOPLE")
    public JAXBElement<String> createPEOPLE(String value) {
        return new JAXBElement<String>(_PEOPLE_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "EXCHANGES")
    public JAXBElement<String> createEXCHANGES(String value) {
        return new JAXBElement<String>(_EXCHANGES_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AUTHOR", scope = XMLText.class)
    public JAXBElement<String> createTEXTAUTHOR(String value) {
        return new JAXBElement<String>(_TEXTAUTHOR_QNAME, String.class, XMLText.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BODY", scope = XMLText.class)
    public JAXBElement<String> createTEXTBODY(String value) {
        return new JAXBElement<String>(_TEXTBODY_QNAME, String.class, XMLText.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "DATELINE", scope = XMLText.class)
    public JAXBElement<String> createTEXTDATELINE(String value) {
        return new JAXBElement<String>(_TEXTDATELINE_QNAME, String.class, XMLText.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TITLE", scope = XMLText.class)
    public JAXBElement<String> createTEXTTITLE(String value) {
        return new JAXBElement<String>(_TEXTTITLE_QNAME, String.class, XMLText.class, value);
    }

}
